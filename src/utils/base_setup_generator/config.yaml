base_dockerfile_template: |
  ARG PYTHON_VERSION=""

  FROM python:${{PYTHON_VERSION}}

  MAINTAINER Mutlu Polatcan <mutlupolatcan@gmail.com>

  ENV AIRFLOW_USER_HOME="/home/airflow"
  ENV AIRFLOW_HOME="${{AIRFLOW_USER_HOME}}/airflow" \
      AIRFLOW_CONF_DIR="${{AIRFLOW_USER_HOME}}/airflow" \
      AIRFLOW_VIRTUALENV="${{AIRFLOW_USER_HOME}}/airflow_venv" \
      AIRFLOW_DAEMONS="NULL" \
      AIRFLOW_DATABASE_TYPE="postgresql" \
      AIRFLOW_DATABASE_HOST="NULL" \
      AIRFLOW_DATABASE_PORT="NULL" \
      AIRFLOW_DATABASE_USER="NULL" \
      AIRFLOW_DATABASE_PASSWORD="NULL" \
      AIRFLOW_BROKER_TYPE="redis" \
      AIRFLOW_BROKER_HOST="NULL" \
      AIRFLOW_BROKER_PORT="NULL" \
      AIRFLOW_BROKER_USER="NULL" \
      AIRFLOW_BROKER_PASSWORD="NULL" \
      AIRFLOW_BROKER_RESULT_BACKEND_TYPE="postgresql" \
      AIRFLOW_BROKER_RESULT_BACKEND_HOST="NULL" \
      AIRFLOW_BROKER_RESULT_BACKEND_PORT="NULL" \
      AIRFLOW_BROKER_RESULT_BACKEND_USER="NULL" \
      AIRFLOW_BROKER_RESULT_BACKEND_PASSWORD="NULL" \
      AIRFLOW_WEBSERVER_AUTH_BACKEND_TYPE="NULL" \
      AIRFLOW_RETRY_INTERVAL_IN_SECS="2" \
      AIRFLOW_MAX_RETRY_TIMES="-1" \
      AIRFLOW_INITIAL_USERS="NULL" \
  {env_vars}
  ENV PATH=${{AIRFLOW_VIRTUALENV}}/bin:$PATH

  ADD entrypoint.sh ${{AIRFLOW_USER_HOME}}/airflow_entrypoint.sh
  ADD config_loader.sh ${{AIRFLOW_USER_HOME}}/airflow_config_loader.sh

  RUN apt-get update && \
      apt-get -y install --no-install-recommends nano \
                                                 gcc \
                                                 g++ \
                                                 iputils-ping \
                                                 dnsutils \
                                                 telnet \
                                                 netcat \
                                                 default-libmysqlclient-dev \
                                                 libkrb5-dev \
                                                 libsasl2-dev && \
      rm -rf /var/lib/apt/lists/* && \
      addgroup airflow && adduser --disabled-password --gecos "" --ingroup airflow airflow && \
      mkdir -p ${{AIRFLOW_USER_HOME}} && \
      mkdir -p ${{AIRFLOW_HOME}} ${{AIRFLOW_VIRTUALENV}} && \
      pip3 install virtualenv && \
      virtualenv -p python3 ${{AIRFLOW_VIRTUALENV}} && \
      ${{AIRFLOW_VIRTUALENV}}/bin/pip3 install "pymssql<3.0" && \
      chmod +x ${{AIRFLOW_USER_HOME}}/airflow_entrypoint.sh ${{AIRFLOW_USER_HOME}}/airflow_config_loader.sh

config_loader_sh_template: |
  #!/usr/bin/env bash

  declare -A __AUTHENTICATION_BACKENDS__

  __AUTHENTICATION_BACKENDS__[password]="airflow.contrib.auth.backends.password_auth"
  __AUTHENTICATION_BACKENDS__[ldap]="airflow.contrib.auth.backends.ldap_auth"
  __AUTHENTICATION_BACKENDS__[github_enterprise]="airflow.contrib.auth.backends.github_enterprise_auth"
  __AUTHENTICATION_BACKENDS__[google]="airflow.contrib.auth.backends.google_auth"

  function load_config() {{
      if [[ "$2" != "NULL" ]]
          then
              printf "$1 = $2\n" >> "${{AIRFLOW_CONF_DIR}}/$3"
      fi
  }}

  function load_config_with_opt() {{
      if [[ "$2" != "NULL" ]]
          then
              printf "$1 = $3\n" >> "${{AIRFLOW_CONF_DIR}}/$5"
      else
          printf "$1 = $4\n" >> "${{AIRFLOW_CONF_DIR}}/$5"
      fi
  }}

  {load_fn_calls}

config_files:
  - path: airflow_configs/airflow-cfg.yml
    filename: airflow.cfg

output_dir: ../../base